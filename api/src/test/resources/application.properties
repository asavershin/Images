server:
  port: 8081

spring:
  servlet:
    multipart:
      max-file-size: 10MB
  config:
    import: optional:file:.env[.properties]
  datasource:
    url: jdbc:postgresql://${HOST}:${PORT_DB}/${POSTGRES_DB}?currentSchema=${POSTGRES_SCHEMA}
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
  liquibase:
    enabled: true
    drop-first: false
    change-log: classpath:db/changelog/db.changelog-master.yaml
    default-schema: ${POSTGRES_SCHEMA}
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${REDIS_PASSWORD}
    cache:
      type: redis
      cache-names: redis-cache
      redis:
        time-to-live: ${REDIS_CACHE_TIME}

  kafka:
    bootstrap-servers:
      - kafka-1:9092
      - kafka-2:9093
      - kafka-3:9094
    properties:
      sasl:
        jaas:
          config: org.apache.kafka.common.security.plain.PlainLoginModule required username=${kafka_username:'kafka'} password=${kafka_password:'password123'};
        mechanism: PLAIN
      security:
        protocol: SASL_PLAINTEXT

springdoc:
  swagger-ui:
    path: /docs

jwt:
  access-expiration: ${ACCESS_EXPIRATION}
  refresh-expiration: ${REFRESH_EXPIRATION}
  secret: ${JWT_SECRET}

minio:
  url: ${MINIO_URL}
  user: ${MINIO_ROOT_USER}
  password: ${MINIO_ROOT_PASSWORD}
  bucket: ${MINIO_BUCKET}
  console-port: ${MINIO_CONSOLE_PORT}
  port: ${MINIO_PORT}

app:
  topic: ${TOPIC:custom-topic-2}
  partitions: ${PARTITIONS:1}
  replicas: ${REPLICAS:3}
  group-id: ${GROUP_ID:custom-group-id}


